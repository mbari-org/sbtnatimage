name: Native Image
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
             # We remove the 'v' in the name of the released artifacts.

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set release tag
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#*refs/tags/v}" >> $GITHUB_ENV

      - uses: olafurpg/setup-scala@v11
      - run: git fetch --tags || true

      - name: Run sbt
        shell: bash
        run: |
          WITH_STATIC=1 sbt sbtnatimage/nativeImage
      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: "sbtnatimage/target/native-image/sbtnatimage"
      - name: Zip binary
        shell: bash
        run: |
          zip -j "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-linux.zip" "sbtnatimage/target/native-image/sbtnatimage"
          ls -lrth

      - name: Upload linux
        uses: actions/upload-artifact@v2
        with:
          path: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-linux.zip"
          name: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-linux.zip"

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set release tag
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#*refs/tags/v}" >> $GITHUB_ENV

      - uses: olafurpg/setup-scala@v11
      - run: git fetch --tags || true

      - name: Run sbt
        shell: bash
        run: |
          sbt sbtnatimage/nativeImage
      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: "sbtnatimage/target/native-image/sbtnatimage"
      - name: Zip binary
        shell: bash
        run: |
          zip -j "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-apple-darwin.zip" "sbtnatimage/target/native-image/sbtnatimage"
          ls -lrth

      - name: Upload macos
        uses: actions/upload-artifact@v2
        with:
          path: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-apple-darwin.zip"
          name: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-apple-darwin.zip"

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v11
      - run: git fetch --tags || true
      - name: Run sbt
        shell: cmd
        run: >-
          "C:\Program Files (x86)\Microsoft Visual
          Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && sbt
          sbtnatimage/nativeImage
      - shell: cmd
        run: |
          tree sbtnatimage\target
          copy "sbtnatimage\target\native-image\sbtnatimage.exe" .
          dir
      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: "sbtnatimage.exe"
      - name: Upload windows
        # we zip the .exe in the release job, where we also have the RELEASE_TAG
        # (I'm just much less familiar with windows in general)
        uses: actions/upload-artifact@v2
        with:
          path: "sbtnatimage.exe"
          name: "sbtnatimage.exe"

  release:
    if: always()  # of course, can be removed/adjusted as needed
    needs: [build_linux, build_macos, build_windows]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set release tag
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#*refs/tags/v}" >> $GITHUB_ENV

      - name: See GITHUB_ENV
        run: |
          cat $GITHUB_ENV

      - name: Download linux
        uses: actions/download-artifact@v2
        with:
          name: sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-linux.zip
      - name: Download mac
        uses: actions/download-artifact@v2
        with:
          name: sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-apple-darwin.zip

      - name: Download windows
        uses: actions/download-artifact@v2
        with:
          name: "sbtnatimage.exe"
      - uses: papeloto/action-zip@v1
        with:
          files: "sbtnatimage.exe"
          dest: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-win32.zip"

      - name: See downloaded artifacts
        run: |
          ls -lrth

      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body:
          draft: false
          prerelease: ${{ contains(env.RELEASE_TAG, '-') }}

      - name: Upload release linux
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-linux.zip"
          asset_name: sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-linux.zip
          asset_content_type: application/zip

      - name: Upload release macos
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-apple-darwin.zip"
          asset_name: sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-apple-darwin.zip
          asset_content_type: application/zip

      - name: Upload release windows
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-win32.zip"
          asset_name: "sbtnatimage-${{ env.RELEASE_TAG }}-x86_64-pc-win32.zip"
          asset_content_type: application/zip
